#ifndef ASCII_ART_H
#define ASCII_ART_H

#include "Monster.h"

namespace art
{
  void welcomePlayer()
{
	std::cout << R"(
 __          __  _                          
 \ \        / / | |                         
  \ \  /\  / /__| | ___ ___  _ __ ___   ___ 
   \ \/  \/ / _ \ |/ __/ _ \| '_ ` _ \ / _ \
    \  /\  /  __/ | (_| (_) | | | | | |  __/
     \/  \/ \___|_|\___\___/|_| |_| |_|\___|
                                           )";
}

  void drawLines()
{
    std::cout << R"(
--------------------------------------------------------------
--------------------------------------------------------------

)";
}

  void drawCat()
{
    std::cout << R"(
    /\_____/\
   /  o   o  \
  ( ==  ^  == )
   )         (
  (           )
 ( (  )   (  ) )
(__(__)___(__)__)

)";
}

  void drawDragon()
{
    std::cout << R"(
 <>=======() 
(/\___   /|\\          ()==========<>_
      \_/ | \\        //|\   ______/ \)
        \_|  \\      // | \_/
          \|\/|\_   //  /\/
           (oo)\ \_//  /
          //_/\_\/ /  |
         @@/  |=\  \  |
              \_=\_ \ |
                \==\ \|\_ snd
             __(\===\(  )\
            (((~) __(_/   |
                 (((~) \  /
                 ______/ /
                 '------'

)";
}

  void drawOrc()
{
    std::cout << R"(
                            __,='`````'=/__
                          '//  (o) \(o) \ `'         _,-,
                          //|     ,_)   (`\      ,-'`_,-\
                        ,-~~~\  `'==='  /-,      \==```` \__
                       /        `----'     `\     \       \/
                    ,-`                  ,   \  ,.-\       \
                   /      ,               \,-`\`_,-`\_,..--'\
                  ,`    ,/,              ,>,   )     \--`````\
                  (      `\`---'`  `-,-'`_,<   \      \_,.--'`
                   `.      `--. _,-'`_,-`  |    \
                    [`-.___   <`_,-'`------(    /
                    (`` _,-\   \ --`````````|--`
                     >-`_,-`\,-` ,          |
                   <`_,'     ,  /\          /
                    `  \/\,-/ `/  \/`\_/V\_/
                       (  ._. )    ( .__. )
                       |      |    |      |
                        \,---_|    |_---./
                        ooOO(_)    (_)OOoo⠀⠀

)";
}

  void drawSlime()
{
    std::cout << R"(
                 ██████████                
        ████████░░░░░░░░░░████████        
      ██░░░░░░░░░░░░░░░░░░░░░░░░░░██      
    ██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██    
  ██░░░░░░░░░░░░░░░░░░            ░░██    
  ██░░░░░░░░░░░░░░                  ░░██  
██░░░░░░░░░░                        ░░░░██
██░░░░░░░░░░                        ░░░░██
██░░░░░░░░░░        ██        ██      ░░██
██░░░░░░░░          ██        ██      ░░██
██░░░░░░░░          ██        ██      ░░██
██░░░░░░░░                            ░░██
██░░░░░░░░░░                          ░░██
██░░░░░░░░░░░░                        ░░██
██░░░░░░░░░░░░░░                      ░░██
██░░░░░░░░░░░░░░░░░░                ░░░░██
████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░████
    ██████████████████████████████████    ⠀

)";
}

  void drawMonster(Monster& monster)
{
    if (monster.getName() == "dragon")
    {
        drawDragon();
    }
    else if (monster.getName() == "orc")
    {
        drawOrc();
    }
    else
    {
        drawSlime();
    }
}

  void drawHeart()
{
    std::cout << R"(
  ,d88b.d88b,
  88888888888
  `Y8888888Y'
    `Y888Y'    
      `Y   ⠀

)";
}

  void drawFireworks()
{
    std::cout << R"(
           .* *.               `o`o`
         *. .*              o`o`o`o      ^,^,^
           * \               `o`o`     ^,^,^,^,^
              \     ***        |       ^,^,^,^,^
               \   *****       |        /^,^,^
                \   ***        |       /
    ~@~*~@~      \   \         |      /
  ~*~@~*~@~*~     \   \        |     /
  ~*~@smd@~*~      \   \       |    /     #$#$#        .`'.;.
  ~*~@~*~@~*~       \   \      |   /     #$#$#$#   00  .`,.',
    ~@~*~@~ \        \   \     |  /      /#$#$#   /|||  `.,'
_____________\________\___\____|_/______/_________|\/\___||______
)";
}

  void drawGameOverArt()
{
    std::cout << R"(
 _____                        _____                
|  __ \                      |  _  |               
| |  \/ __ _ _ __ ___   ___  | | | |_   _____ _ __ 
| | __ / _` | '_ ` _ \ / _ \ | | | \ \ / / _ \ '__|
| |_\ \ (_| | | | | | |  __/ \ \_/ /\ V /  __/ |   
 \____/\__,_|_| |_| |_|\___|  \___/  \_/ \___|_|   
                                                   
                                                   
)";
}

  void drawDog()
{
    std::cout << R"(
 _   _
/(. .)\    )
  (*)____/|
  /       |
 /   |--\ |
(_)(_)  (_)
)";
}

  void drawCrow()
{
    std::cout << R"(
     
     ████████                                          
  ██████  ████                                          
██████████████                                          
      ██████████                                        
      ████████████████                                  
      ██████████████████████                            
      ████████████████████████████                      
        ████████████████████████████                    
        ██████████████████████████████████              
        ████████████████████████████████████            
            ████████████████████████████████████████████
              ████████████████████████████████████████  
                  ████████████████                      
                    ██    ██                            
                    ██    ██                            
                    ██    ██                            
                ██████████████  
)";
}
}


#endif